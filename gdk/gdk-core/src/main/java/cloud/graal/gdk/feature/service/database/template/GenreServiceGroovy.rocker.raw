@import io.micronaut.starter.application.Project
@args (Project project, String rootPackage)

@if (project.getPackageName() != null) {
package @(project.getPackageName()).service

}
import @(rootPackage)domain.Genre
import @(rootPackage)repository.GenreRepository
import groovy.transform.CompileStatic
import io.micronaut.data.model.Pageable
import jakarta.inject.Singleton

import jakarta.transaction.Transactional

@@CompileStatic
@@Singleton
class GenreService {

    private final GenreRepository genreRepository

    GenreService(GenreRepository genreRepository) {
        this.genreRepository = genreRepository
    }

    Optional<Genre> findById(Long id) {
        return genreRepository.findById(id)
    }

    @@Transactional
    long update(long id, String name) {
        return genreRepository.update(id, name)
    }

    List<Genre> list(Pageable pageable) {
        return genreRepository.findAll(pageable).content
    }

    @@Transactional
    Genre save(String name) {
        return genreRepository.save(name)
    }

    @@Transactional
    void delete(long id) {
        genreRepository.deleteById(id)
    }
}
