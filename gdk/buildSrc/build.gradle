/*
 * Copyright 2023 Oracle and/or its affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy-gradle-plugin'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation libs.micronaut.application
    implementation libs.micronaut.library
    implementation libs.shadow
    implementation libs.spotless
    implementation libs.test.logger
    implementation libs.tomlj
    implementation libs.micronaut.internal.build.bom
    compileOnly libs.rocker
}

var writeRockerHelper = tasks.register('writeRockerHelper', WriteRockerHelper) {
    outputDirectory = layout.buildDirectory.dir('generated/helper')
    rockerVersion = libs.versions.rocker
}

sourceSets.main.java.srcDir(writeRockerHelper)

gradlePlugin {
    plugins {
        rockerPlugin {
            id = 'gdk.rocker'
            implementationClass = 'cloud.graal.gdk.rocker.plugin.RockerPlugin'
        }
        gdkBomPlugin {
            id = 'gdk.bom'
            implementationClass = 'cloud.graal.gdk.pom.GdkBomPlugin'
        }
        versionCatalogUpdates {
            id = 'gdk.version-catalog-updates'
            implementationClass = 'cloud.graal.gdk.dependencies.GdkVersionCatalogUpdatePlugin'
        }
    }
}

abstract class WriteRockerHelper extends DefaultTask {
    @OutputDirectory
    abstract DirectoryProperty getOutputDirectory()

    @Input
    abstract Property<String> getRockerVersion()

    @TaskAction
    void execute() {
        var outputFile = outputDirectory.get().asFile.toPath()
            .resolve('cloud/graal/gdk/rocker/plugin/RockerHelper.java')
        outputFile.parent.toFile().mkdirs()
        outputFile.text = """\
package cloud.graal.gdk.rocker.plugin;

abstract class RockerHelper {
    public static final String VERSION = "${rockerVersion.get()}";
}
"""
    }
}
