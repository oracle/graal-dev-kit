@import io.micronaut.starter.application.Project
@args (Project project, String nameAttr)

@if (project.getPackageName() != null) {
package @(project.getPackageName());

}
import io.micronaut.core.annotation.Nullable;
import io.micronaut.http.annotation.Controller;
import io.micronaut.http.annotation.Get;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.authentication.Authentication;
import io.micronaut.views.View;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import static io.micronaut.security.rules.SecurityRule.IS_ANONYMOUS;
import static io.micronaut.security.rules.SecurityRule.IS_AUTHENTICATED;

@@Controller // <1>
class AuthController {

    @@Secured(IS_ANONYMOUS) // <2>
    @@View("auth") // <3>
    @@Get // <4>
    Map<String, Object> index(@@Nullable Authentication authentication) { // <5>
        Map<String, Object> model = new HashMap<>();
        if (authentication != null) {
            model.put("username", authentication.getAttributes().get("@(nameAttr)"));
        } else {
            model.put("username", "Anonymous");
        }
        return model;
    }

    @@Secured(IS_AUTHENTICATED) // <6>
    @@Get("/secure") // <7>
    Map<String, Object> secured() {
        return Collections.singletonMap("secured", true); // <8>
    }
}
