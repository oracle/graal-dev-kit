/*
 * Copyright 2023 Oracle and/or its affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'gdk-module-public'
    id 'gdk.rocker'
    id 'gdk-dependencies'
    id 'io.micronaut.library'
}

dependencies {
    // not in libs.versions.toml to keep Micronaut version in 1 place (micronautVersion.txt)
    api(libs.micronaut.starter.api) {
        exclude group: 'io.micronaut', module: 'micronaut-buffer-netty'
        exclude group: 'io.micronaut', module: 'micronaut-http-client'
        exclude group: 'io.micronaut', module: 'micronaut-http-client-core'
        exclude group: 'io.micronaut', module: 'micronaut-http-netty'
        exclude group: 'io.micronaut', module: 'micronaut-websocket'
        exclude group: 'io.micronaut.testresources', module: 'micronaut-test-resources-build-tools'
        exclude group: 'io.netty', module: 'netty-buffer'
        exclude group: 'io.netty', module: 'netty-codec'
        exclude group: 'io.netty', module: 'netty-codec-http'
        exclude group: 'io.netty', module: 'netty-codec-http2'
        exclude group: 'io.netty', module: 'netty-codec-socks'
        exclude group: 'io.netty', module: 'netty-common'
        exclude group: 'io.netty', module: 'netty-handler'
        exclude group: 'io.netty', module: 'netty-handler-proxy'
        exclude group: 'io.netty', module: 'netty-resolver'
        exclude group: 'io.netty', module: 'netty-transport'
        exclude group: 'io.swagger.core.v3', module: 'swagger-annotations'
        exclude group: 'org.eclipse.jgit', module: 'org.eclipse.jgit'
    }
    implementation(mnLibs.micronaut.http.client)
    implementation(libs.boms.netty)
    implementation(libs.netty.buffer)
    implementation(libs.netty.codec.http)
    implementation(libs.netty.codec.http2)
    implementation(libs.netty.common)
    implementation(libs.netty.incubator.codec.http3)
    implementation(libs.netty.handler)
    implementation(libs.netty.handler.proxy)
    implementation(libs.netty.transport.native.epoll)
    implementation(libs.netty.transport.native.kqueue)
    implementation(libs.netty.transport.native.iouring)
    implementation(libs.netty.transport.native.unix.common)
    implementation(libs.netty.tcnative.boringssl.static)
}

def writeVersions = tasks.register('writeVersions', cloud.graal.gdk.util.WriteVersionsTask) {
    versions.put('version.txt', System.getenv('CI_COMMIT_TAG') ? System.getenv('CI_COMMIT_TAG').substring(1) : providers.gradleProperty('version'))
    outputDirectory = layout.buildDirectory.dir('versions')
}

sourceSets {
    main {
        rocker {
            srcDir 'src/main/java'
        }
        resources {
            srcDir(writeVersions)
        }
    }
}

micronaut {
    version libs.micronaut.starter.api.get().version
    processing {
        incremental true
        annotations 'cloud.graal.gdk.*'
    }
}

javadoc {
    exclude '**/template/**'
}

publishing {
    publications {
        mavenGdkCore(MavenPublication) {
            groupId = 'cloud.graal.gdk'
            artifactId = 'gdk-core'

            from components.java
        }
    }
}
