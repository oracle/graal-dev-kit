@import io.micronaut.starter.application.Project
@args (Project project)

@if (project.getPackageName() != null) {
package @(project.getPackageName())

}
import io.micronaut.context.BeanContext
import io.micronaut.context.annotation.Property
import io.micronaut.core.util.CollectionUtils
import io.micronaut.email.AsyncTransactionalEmailSender
import io.micronaut.email.Email
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.client.HttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.test.extensions.junit5.annotation.MicronautTest
import jakarta.inject.Inject
import org.junit.jupiter.api.Test

import static io.micronaut.email.BodyType.HTML
import static io.micronaut.http.HttpStatus.ACCEPTED
import static org.junit.jupiter.api.Assertions.assertEquals
import static org.junit.jupiter.api.Assertions.assertNotNull
import static org.junit.jupiter.api.Assertions.assertTrue

@@Property(name = 'spec.name', value = 'MailControllerTest')
@@Property(name = 'micronaut.email.from.email', value = 'mo@@gdk.example')
@@MicronautTest
class MailControllerTest {

    @@Inject
    @@Client('/')
    HttpClient httpClient

    @@Inject
    BeanContext beanContext

    @@Test
    void getMailSendEndpointSendsAnEmail() {

        HttpResponse<?> response = httpClient.toBlocking().exchange(
                HttpRequest.POST('/mail/send', [to: 'jo@@gdk.example']))
        assertEquals(ACCEPTED, response.status())

        AsyncTransactionalEmailSender<?, ?> sender = beanContext.getBean(AsyncTransactionalEmailSender)
        assertTrue(sender instanceof EmailSenderReplacement)

        EmailSenderReplacement sendgridSender = (EmailSenderReplacement) sender
        assertTrue(CollectionUtils.isNotEmpty(sendgridSender.emails))
        assertEquals(1, sendgridSender.emails.size())

        Email email = sendgridSender.emails[0]
        assertEquals('mo@@gdk.example', email.from.email)
        assertNotNull(email.to)
        assertTrue(email.to.stream().findFirst().isPresent())
        assertEquals('jo@@gdk.example', email.to.stream().findFirst().get().email)
        assertEquals('Sending email with Amazon SES is Fun', email.subject)
        assertNotNull(email.body)
        assertTrue(email.body.get(HTML).isPresent())
        assertEquals('and <em>easy</em> to do anywhere with <strong>Micronaut Email</strong>', email.body.get(HTML).get())
    }
}
